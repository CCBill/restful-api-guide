openapi: 3.0.0
info:
  title: RESTful API Endpoints
  version: 1.0.0
servers:
  - url: https://api.ccbill.com
    description: Production Server
tags:
  - name: /transactions
    description: |-
      Use the `/transactions` endpoint to create a charge for an existing or new customer, or to retrieve data on a charge.
      A charge can represent a transaction on a customer's billing details by a sponsor, based on a token obtained from an affiliate that identifies one of their clients.
security:
  - bearerAuth: []
paths:
  /transactions/payment-tokens/threeds/{paymentTokenId}:
    post:
      tags:
        - /transactions
      summary: Creates a 3DS transactiong using Payment Token
      description: |-
        Use this API call to initiate a transaction with additional 3DS parameters.
        Supply the payment token ID as a URI parameter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreedsTransactionRequest'
            examples:
              Single billing 3DS transaction:
                description: Request body for charging a token and initiating one time 3DS transaction of 50 EUR passing a customer reference as a pass-through parameter.
                value:
                  {
                    "clientAccnum": 900684,
                    "clientSubacc": 0,
                    "initialPrice": 50,
                    "initialPeriod": 0,
                    "currencyCode": 978,
                    "passThroughInfo": [
                      {
                        "name": "customerRef",
                        "value": "cus_123"
                      }
                    ],
                    "threedsEci": "05",
                    "threedsStatus": "Y",
                    "threedsSuccess": true,
                    "threedsVersion": "2.2.0",
                    "threedsAmount": "50.0",
                    "threedsClientTransactionId": "id-18kz8gxg7xv",
                    "threedsCurrency": "978",
                    "threedsSdkTransId": "aeba8094-ce5b-11ef-a890-0242ac110004",
                    "threedsAcsTransId": "d6f15aae-2c9d-4333-a920-954be07c0c76",
                    "threedsDsTransId": "3efc640b-8606-4d2a-a75e-9b9604fd7e9d",
                    "threedsAuthenticationType": "01",
                    "threedsAuthenticationValue": "AHUIg/TRI/Vo6qaaMN/eID4McaI="
                  }
      parameters:
        - name: paymentTokenId
          in: path
          required: true
          schema:
            type: string
          example: ee0d05a3c41127025decd7c37855f42a
      responses:
        '200':
          description: Processed Transaction object
          content:
            application/vnd.mcn.transaction-service.api.v.2+json:
              schema:
                $ref: '#/components/schemas/TransactionInfoV2'
              examples:
                Succesful Transaction:
                  description: Successfully processed transaction
                  value:
                    {
                      "declineCode": null,
                      "declineText": null,
                      "denialId": null,
                      "approved": true,
                      "paymentUniqueId": "z8Zprmki+WoAyOwj74Ei3w",
                      "sessionId": null,
                      "newPaymentTokenId": null,
                      "subscriptionId": "925014201000000206"
                    }
            application/vnd.mcn.transaction-service.api.v.1+json:
              schema:
                $ref: '#/components/schemas/TransactionInfo'
              examples:
                Succesful Transaction:
                  description: Successfully processed transaction
                  value:
                    {
                      "declineCode": null,
                      "declineText": null,
                      "denialId": null,
                      "approved": true,
                      "paymentUniqueId": "z8Zprmki+WoAyOwj74Ei3w",
                      "sessionId": null,
                      "newPaymentTokenId": null,
                      "subscriptionId": 925014201000000206
                    }
        '400':
          description: Bad Request. The response failed to complete due to an invalid header, query or request body parameter. This response does not differ between versions.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Bad Request:
                  description: |- 
                    Returned when one of `requestBody`'s fields is not valid.<br>
                    <em>Note</em>: For completeness the `errors` array in this example holds errors for all existing validated fields, but any subset of these can be returned.
                  value:
                    {
                      "id": "5ea81718-6617-42d1-8852-77e5a18ecb57",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [
                        {
                          "field": "clientAccnum",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientAccnum",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "initialPrice",
                          "message": "Attribute required"
                        },
                        {
                          "field": "initialPeriod",
                          "message": "Attribute required"
                        },
                        {
                          "field": "threedsAmount",
                          "message": "Threeds amount is not equal to initialPrice"
                        },
                        {
                          "field": "threedsError",
                          "message": "Threeds request parameters need to contain either 3DS verification parameters or error parameters to be valid"
                        },
                        {
                          "field": "threedsCavv",
                          "message": "Invalid 3DS Cavv"
                        },
                        {
                          "field": "threedsCavvAlgorithm",
                          "message": "Invalid 3DS Cavv Algorithm"
                        },
                        {
                          "field": "threedsXid",
                          "message": "Invalid 3DS Xid"
                        },
                        {
                          "field": "threedsDsTransId",
                          "message": "Invalid 3DS Ds Trans Id"
                        },
                        {
                          "field": "threedsAcsTransId",
                          "message": "Invalid 3DS Acs Trans Id"
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2024-12-30T14:58:56.914Z"
                    }
                Inactive program participation:
                  description: Returned when program participation between the provided merchants is inactive.
                  value:
                    {
                      "id": "5ea81718-6617-42d1-8852-77e5a18ecb57",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [
                        {
                          "field": null,
                          "message": "Program is Inactive"
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2025-01-10T12:23:12.998Z"
                    }
                Expired token error:
                  value:
                    {
                      "id": "757bb1a4-2795-463e-a301-2d44188ecdcb",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Expired payment token",
                      "errorCode": 100102,
                      "timestamp": "2025-01-14T12:53:00.665Z"
                    }
                Invalid client account error:
                  value:
                    {
                      "id": "80eb96b8-c009-4ca6-8176-58990727e890",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Invalid client account",
                      "errorCode": 100100,
                      "timestamp": "2025-01-14T15:40:39.564Z"
                    }

        '401':
          description: Unauthorized. Returned when the caller is not authorized to perform the requested action. This response does not have a response body.
        '403':
          description: Forbidden. Returned when the caller does not have adequate permissions to access the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Forbidden:
                 value:
                  {
                    "id": "89e8a24a-e1b3-4366-a968-20d21b1023f3",
                    "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                    "errors": [],
                    "generalMessage": "Forbidden",
                    "errorCode": 100020,
                    "timestamp": "2024-12-30T09:10:16.615Z"
                  }
        '404':
          description: Not Found. Returned when the requested resource or any of the required related resources is not found.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Found:
                  value:
                    {
                      "id": "98efcc51-51aa-4989-bd35-88041489c8d1",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Not Found",
                      "errorCode": 130000,
                      "timestamp": "2024-12-27T15:06:01.190Z"
                    }

        '405':
          description: Method Not Allowed. Returned when the requested method is not allowed for the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Method Not Allowed:
                  value:
                    {
                      "id": "399f8978-e8f0-48f9-bedc-e1725534cc6b",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Method Not Allowed",
                      "errorCode": 130000,
                      "timestamp": "2024-12-30T09:21:25.724Z"
                    }
        '406':
          description: Not Acceptable. Returned when the requested media type is not supported.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Acceptable:
                  value:
                    {
                      "id": "4dfa73a9-9fd0-4995-9e00-4984464c3f91",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Not Acceptable",
                      "errorCode": 100015,
                      "timestamp": "2024-12-30T09:45:11.962Z"
                    }
        '415':
          description: Unsupported Media Type. Returned when the requested media type is not supported.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Unsupported Media Type:
                  value:
                    {
                      "id": "ac10e72b-0124-481c-a7f8-44875352cf87",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Unsupported Media Type",
                      "errorCode": 100004,
                      "timestamp": "2024-12-30T19:39:18.861Z"
                    }
        '500':
          description: Internal Server Error. Returned when the server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Internal Server Error:
                  value:
                    {
                      "id": "f82d6175-c992-4342-8271-7a181d031415",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "An error occurred, please try again later.",
                      "errorCode": 100100,
                      "timestamp": "2024-12-30T13:50:51.218Z"
                    }
                Database or Data Link inactive error:
                  value:
                    {
                      "id": "00a2a631-f32b-40b2-8058-42b244129d87",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "There was an internal error or a database error and the requested action could not be completed or Data Link is inactive for user",
                      "errorCode": 100106,
                      "timestamp": "2025-01-14T12:24:41.218Z"
                    }
components:
  schemas:
    PassThroughInfo:
      description: Elements of the `passThroughInfo` array represent custom paired information passed through to the transaction service.
      type: object
      properties:
        name:
          description: Custom passthrough value.
          type: string
        value:
          description: Custom passthrough value.
          type: string
      required:
        - name
        - value
      example:
        name: "value1"
        value: "value2"
    TransactionInfo:
      description: Response parameters confirm that a customer was successfully charged using a Payment Token.
      type: object
      properties:
        declineCode:
          description: Decline code returned in case of error
          type: integer
          format: int64
        declineText:
          description: Decline message returned in case of error
          type: string
        denialId:
          description: Denial ID returned in case of error
          type: string
        approved:
          description: Approval status of the transaction
          type: boolean
        paymentUniqueId:
          description: Unique key connected to payment account
          type: string
        sessionId:
          description: Unique session ID value for transaction
          type: string
        subscriptionId:
          description: subscription ID to which the transaction belongs
          type: integer
          format: int64
        newPaymentTokenId:
          description: New payment token for subsequent transactions
          type: string
      example:
        errorCode: 200
        approved: true
        paymentUniqueId: "53104f5a54d3d43254def41c29aedba8"
        sessionId: "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        subscriptionId: 900000000000000000
        newPaymentTokenId: "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
    TransactionInfoV2:
      description: Response parameters confirm that a customer was successfully charged using a payment token.
      type: object
      properties:
        declineCode:
          description: Decline code returned in case of error
          type: integer
          format: int64
        declineText:
          description: Decline message returned in case of error
          type: string
        denialId:
          description: Denial ID returned in case of error
          type: string
        approved:
          description: Approval status of the transaction
          type: boolean
        paymentUniqueId:
          description: Unique key connected to payment account
          type: string
        sessionId:
          description: Unique session ID value for transaction
          type: string
        subscriptionId:
          description: subscription ID to which the transaction belongs
          type: string
        newPaymentTokenId:
          description: New payment token for subsequent transactions
          type: string
      example:
        errorCode: 200
        approved: true
        paymentUniqueId: "53104f5a54d3d43254def41c29aedba8"
        sessionId: "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        subscriptionId: "900000000000000000"
        newPaymentTokenId: "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
    ThreedsTransactionRequest:
        description: Parameters for initiating a charge with 3DS authentication.
        type: object
        properties:
            clientAccnum:
                description: Merchant account number.
                type: integer
                format: int32
                minimum: 0
                maximum: 999999
            clientSubacc:
                description: Merchant subaccount number.
                type: integer
                format: int32
                minimum: 0
                maximum: 999999
            initialPrice:
                description: Initial transaction price.
                type: number
                format: decimal
            initialPeriod:
                description: The length (in days) of the initial billing period.
                type: integer
                format: int64
            currencyCode:
                description: Three-digit currency code (ISO 4217 standard) for the currency used in the transaction.
                type: integer
                format: int64
            recurringPrice:
                description: The amount the consumer will be charged for each recurring bill.
                type: number
                format: decimal
            recurringPeriod:
                description: The length of time between rebills.
                type: integer
                format: int64
            rebills:
                description: The total number of times the subscription will rebill.
                type: integer
                format: int64
            lifeTimeSubscription:
                description: The presence of this variable with a value of **1** indicates that the transaction is a lifetime subscription.
                type: boolean
            createNewPaymentToken:
                description: Return new payment token for subsequent transactions or not.
                type: boolean
            passThroughInfo:
                description: Paired information being passed through to the transaction service.
                type: array
                items:
                    $ref: '#/components/schemas/PassThroughInfo'
            threedsCardToken:
                description: The encrypted cardToken you receive through the 3DS verification process. As we require only the first 16 characters, trim the string to that length before sending it to the CCBill API. Sending a string longer than 16 characters results in an error.
                type: string
                nullable: true
                maxLength: 16
            threedsEci:
                description: An Electronic Commerce Indicator (ECI).
                type: string
                nullable: true
                maxLength: 2
            threedsStatus:
                description: The status of the 3DS verification.
                type: string
                nullable: true
                maxLength: 1
            threedsVersion:
                description: The version of the 3DS protocol to be followed for this specific card and transaction. Available versions are 1.0.2 and 2.1.0
                type: string
                nullable: true
                maxLength: 20
            threedsXid:
                description: The transaction identifier (XID) is a unique tracking number set by the merchant for 3DS. It is a required parameter for threedsVersion 1.0.2.
                type: string
                nullable: true
                maxLength: 50
            threedsCavv:
                description: A digital signature that proves that the transaction has been 3DS verified. The signature is obtained through a 3DS verification flow and is a required parameter for threedsVersion 1.0.2
                type: string
                nullable: true
                maxLength: 1024
            threedsCavvAlgorithm:
                description: CAVV Algorithm for threeds request. The threedsCavvAlgorithm parameter is required for threedsVersion 1.0.2
                type: string
                nullable: true
                maxLength: 28
            threedsDsTransId:
                description: Directory Server Transaction ID. The threedsDsTransId parameter is required for threedsVersion 2.1.0
                type: string
                nullable: true
                maxLength: 36
            threedsAcsTransId:
                description: Access Control Server Transaction ID. The threedsAcsTransId parameter is required for threedsVersion 2.1.0
                type: string
                nullable: true
                maxLength: 36
            threedsSdkTransId:
                description: The 3DS vendor's transaction ID.
                type: string
                nullable: true
                maxLength: 36
            threedsAuthenticationType:
                description: A digital signature that proves that the transaction has been 3DS verified. The signature is obtained through a 3DS verification flow (v2.1.0).
                type: string
                nullable: true
                maxLength: 36
            threedsAuthenticationValue:
                description: A digital signature that proves that the transaction has been 3DS verified. The signature is obtained through a 3DS verification flow (v2.1.0).
                type: string
                nullable: true
                maxLength: 36
            threedsClientTransactionId:
                description: The parameter is automatically generated by the Advanced Widget. Its purpose is to identify the origin of the 3DS authentication transaction.
                type: string
                nullable: true
                maxLength: 36
            threedsSuccess:
                description: Verification of 3DS authentication success or failure.
                type: boolean
            threedsAmount:
                description: The amount to be charged (same as `initialPrice`).
                type: number
                format: double
            threedsCurrency:
                description: The 3-digit currency code for the currency to be used in this transaction.
                type: string
                nullable: true
            threedsError:
                description: Error received from the 3DS vendor during the strong customer authentication process. The parameter is required if no threedsVersion is provided.
                type: string
                nullable: true
                maxLength: 16
            threedsErrorDetail:
                description: Error details related to the `threedsError`.
                type: string
                nullable: true
            threedsErrorCode:
                description: Error code.
                type: string
                nullable: true
            threedsResponse:
                description: The complete response in case of an error.
                type: string
                nullable: true
        required:
            - clientAccnum
            - clientSubacc
            - initialPrice
            - initialPeriod
            - threedsCardToken
            - currencyCode
            - threedsCavv
            - threedsEci
            - threedsClientTransactionId
            - threedsSuccess
        example:
            clientAccnum: 900123
            clientSubacc: 10
            initialPrice: 9.99
            initialPeriod: 10
            recurringPrice: 15.00
            recurringPeriod: 30
            rebills: 99
            currencyCode: "840"
            lifeTimeSubscription: false
            createNewPaymentToken: false
            passThroughInfo:
                - name: "val1"
                  value: "val2"
            threedsEci: "05"
            threedsError: ""
            threedsStatus: "Y"
            threedsSuccess: true
            threedsVersion: "1.0.2"
            threedsXid: "aWQteHc4ajJnNGIxZW8gICAgICA="
            threedsCavv: "cGFzc3dvcmQxMjM0NTZwYXNzd28="
            threedsCavvAlgorithm: "SHA-256"
            threedsAmount: 10
            threedsClientTransactionId: "id-wl9r6duc5zj"
            threedsCurrency: "USD"
            threedsSdkTransId: ""
            threedsAcsTransId: ""
            threedsDsTransId: ""
            threedsAuthenticationType: ""
            threedsCardToken: "gjeoB5NdJ1r6p0dG"
            threedsErrorDetail: ""
            threedsErrorCode: ""
            threedsResponse: ""
    ValidationError:
      type: object
      properties:
        field:
          description: Field in error
          type: string
        message:
          description: User friendly message
          type: string
      required:
        - field
        - message
      example:
        field: string
        message: string
    Error:
      type: object
      properties:
        id:
          description: The unique ID used to locate an error in the logs.
          type: string
          format: uuid
        errorCode:
          description: Product defined error code.
          type: integer
          format: int32
        generalMessage:
          description: The general user message.
          type: string
          nullable: true
        url:
          description: The requested relative URL that has caused this error response.
          type: string
          format: uri-reference
        timestamp:
          description: The timestamp of the request that resulted in this error response.
          type: string
          format: date-time
        errors:
          description: List of validation errors, which resulted in this error response.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
  parameters:
    trait_versioned_Accept:
      name: '200'
      in: header
      description: API version
      schema:
        type: string
  requestBodies: {}
  headers: {}
  links: {}
  callbacks: {}