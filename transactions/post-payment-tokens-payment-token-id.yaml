openapi: 3.0.0
info:
  title: RESTful API Endpoints
  version: 1.0.0
servers:
  - url: https://api.ccbill.com
    description: Production Server
tags:
  - name: /transactions
    description: |-
      Use the `/transactions` endpoint to create a charge for an existing or new customer, or to retrieve data on a charge.
      A charge can represent a transaction on a customer's billing details by a sponsor, based on a token obtained from an affiliate that identifies one of their clients.
security:
  - bearerAuth: []
paths:
  /transactions/payment-tokens/{paymentTokenId}:
    post:
      tags:
        - /transactions
      summary: Create a transaction request
      description: |-
        The POST `/transactions/payment-tokens/{paymentTokenId}` API call will create a transaction request for a customer.
        The customer is identified by a token that is obtained from an affiliate. If the token is short-lived, and this is the first billing for this customer a longer-lived token is returned.
        Supply the payment token ID as a URI parameter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
            examples:
              30 day subscription (non-recurring):
                description: Request body for charging a token and initiating a 30 day 9.99 USD subscription which is non-recurring.
                value:
                  clientAccnum: 900123
                  clientSubacc: 0
                  initialPrice: 9.99
                  initialPeriod: 30
                  currencyCode: 840
              1 year recurring subscription:
                description: Request body for charging a token and initiating a subscription for 30 day 9.99 EUR initial period that will be renewed for 11 more times every 30 days with amount of 4.99 EUR.
                value:
                  clientAccnum: 900684
                  clientSubacc: 0
                  initialPrice: 9.99
                  initialPeriod: 30
                  recurringPrice: 4.99
                  recurringPeriod: 30
                  rebills: 11
                  currencyCode: 840
              Single billing transaction:
                description: Request body for charging a token and initiating one time transaction of 50 EUR passing a customer reference as a pass-through parameter.
                value:
                  clientAccnum: 900684
                  clientSubacc: 0
                  initialPrice: 50
                  initialPeriod: 0
                  currencyCode: 978
                  passThroughInfo:
                    - name: "customerRef"
                      value: "cus_123"
      parameters:
        - name: paymentTokenId
          in: path
          required: true
          schema:
            type: string
          example: ee0d05a3c41127025decd7c37855f42a
      responses:
        '200':
          description: Successful Response
          content:
            application/vnd.mcn.transaction-service.api.v.2+json:
              schema:
                $ref: '#/components/schemas/TransactionInfoV2'
              examples: 
                Successful Transaction:
                  description: Successfully processed transaction.
                  value:
                    {
                      "declineCode": null,
                      "declineText": null,
                      "denialId": null,
                      "approved": true,
                      "paymentUniqueId": "z8Zprmki+WoAyOwj74Ei3w",
                      "sessionId": null,
                      "newPaymentTokenId": null,
                      "subscriptionId": "925014201000000206"
                    }
            application/vnd.mcn.transaction-service.api.v.1+json:
              schema:
                $ref: '#/components/schemas/TransactionInfo'
              examples: 
                Successful Transaction:
                  description: Successfully processed transaction.
                  value:
                    {
                      "declineCode": null,
                      "declineText": null,
                      "denialId": null,
                      "approved": true,
                      "paymentUniqueId": "z8Zprmki+WoAyOwj74Ei3w",
                      "sessionId": null,
                      "newPaymentTokenId": null,
                      "subscriptionId": 925014201000000206
                    }
                Failed Transaction:
                  description: Transaction that was decline due to a system error
                  value:
                    {
                      "declineCode": 27,
                      "declineText": "System Error, Please Try Again",
                      "denialId": 925013101000000100,
                      "approved": false,
                      "paymentUniqueId": null,
                      "sessionId": null,
                      "newPaymentTokenId": null,
                      "subscriptionId": null
                    }
        '400':
          description: Bad Request. The response failed to complete due to an invalid header, query or request body parameter. This response does not differ between versions.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Bad Request:
                  description: |- 
                    Returned when one of `requestBody`'s fields is not valid.<br>
                    <em>Note</em>: For completeness the `errors` array in this example holds errors for all existing validated fields, but any subset of these can be returned.
                  value:
                    {
                      "id": "14eba0a5-e4e4-4e26-bbfa-cda17aa5b5f3",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [
                        {
                          "field": "clientAccnum",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientAccnum",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "initialPrice",
                          "message": "Attribute required"
                        },
                        {
                          "field": "initialPeriod",
                          "message": "Attribute required"
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2025-01-14T17:52:22.812Z"
                    }
                Inactive program participation:
                  description: Returned when program participation between the provided merchants is inactive.
                  value:
                    {
                      "id": "5ea81718-6617-42d1-8852-77e5a18ecb57",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [
                        {
                          "field": null,
                          "message": "Program is Inactive"
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2025-01-10T12:23:12.998Z"
                    }
                Expired token error:
                  value:
                    {
                      "id": "757bb1a4-2795-463e-a301-2d44188ecdcb",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Expired payment token",
                      "errorCode": 100102,
                      "timestamp": "2025-01-14T12:53:00.665Z"
                    }
                Invalid client account error:
                  value:
                    {
                      "id": "80eb96b8-c009-4ca6-8176-58990727e890",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Invalid client account",
                      "errorCode": 100100,
                      "timestamp": "2025-01-14T15:40:39.564Z"
                    }

        '401':
          description: Unauthorized. Returned when the caller is not authorized to perform the requested action. This response does not have a response body.
        '403':
          description: Forbidden. Returned when the caller does not have adequate permissions to access the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Forbidden:
                 value:
                  {
                    "id": "89e8a24a-e1b3-4366-a968-20d21b1023f3",
                    "url": "/transactions/payment-tokens/{paymentTokenId}",
                    "errors": [],
                    "generalMessage": "Forbidden",
                    "errorCode": 100020,
                    "timestamp": "2024-12-30T09:10:16.615Z"
                  }
        '404':
          description: Not Found. Returned when the requested resource or any of the required related resources is not found.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Found:
                  value:
                    {
                      "id": "98efcc51-51aa-4989-bd35-88041489c8d1",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Not Found",
                      "errorCode": 130000,
                      "timestamp": "2024-12-27T15:06:01.190Z"
                    }

        '405':
          description: Method Not Allowed. Returned when the requested method is not allowed for the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Method Not Allowed:
                  value:
                    {
                      "id": "399f8978-e8f0-48f9-bedc-e1725534cc6b",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Method Not Allowed",
                      "errorCode": 130000,
                      "timestamp": "2024-12-30T09:21:25.724Z"
                    }
        '406':
          description: Not Acceptable. Returned when the requested media type is not supported.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Acceptable:
                  value:
                    {
                      "id": "4dfa73a9-9fd0-4995-9e00-4984464c3f91",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Not Acceptable",
                      "errorCode": 100015,
                      "timestamp": "2024-12-30T09:45:11.962Z"
                    }
        '415':
          description: Unsupported Media Type. Returned when the requested media type is not supported.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Unsupported Media Type:
                  value:
                    {
                      "id": "ac10e72b-0124-481c-a7f8-44875352cf87",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Unsupported Media Type",
                      "errorCode": 100004,
                      "timestamp": "2024-12-30T19:39:18.861Z"
                    }
        '500':
          description: Internal Server Error. Returned when the server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Internal Server Error:
                  value:
                    {
                      "id": "f82d6175-c992-4342-8271-7a181d031415",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "An error occurred, please try again later.",
                      "errorCode": 100100,
                      "timestamp": "2024-12-30T13:50:51.218Z"
                    }
                Database or Data Link inactive error:  
                  value:
                    {
                      "id": "00a2a631-f32b-40b2-8058-42b244129d87",
                      "url": "/transactions/payment-tokens/threeds/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "There was an internal error or a database error and the requested action could not be completed or Data Link is inactive for user",
                      "errorCode": 100106,
                      "timestamp": "2025-01-14T12:24:41.218Z"
                    }
components:
  schemas:
    PassThroughInfo:
      description: Holds a single piece of data that merchants can pass through a transaction processing flow and that will be provided back to them in the approval/denial background posts.
      type: object
      properties:
        name:
          description: Name of the pass through parameter.
          type: string
          example: "customerRef"
        value:
          description: Value of the pass through parameter
          type: string
          example: "customerOne"
      required:
        - name
        - value
    TransactionInfo:
      description: Response parameters confirm that a customer was successfully charged using a payment token.
      type: object
      properties:
        declineCode:
          description: Decline code returned in case of error.
          type: integer
          format: int64
          example: 22
        declineText:
          description: Decline message returned in case of error.
          type: string
          example: "Error contacting bank, please try again later"
        denialId:
          description: Decline ID returned in case of error.
          type: integer
          example: 925013101000000000
        approved:
          description: Approval status of the transaction.
          type: boolean
          example: true
        paymentUniqueId:
          description: Unique key connected to payment account.
          type: string
          example: z8Zprmki+WoAyOwj74Ei3w
        sessionId:
          description: Unique session ID value for transaction.
          type: string
          example: null
        subscriptionId:
          description: Subscription ID associated with the transaction.
          type: integer
          format: int64
          example: 925014201000000300
        newPaymentTokenId:
          description: New payment token for subsequent transactions.
          type: string
          example: null
    TransactionInfoV2:
      description: Response parameters confirm that a customer was successfully charged using a payment token.
      type: object
      properties:
        declineCode:
          description: Decline code returned in case of error.
          type: integer
          format: int64
          example: 22
        declineText:
          description: Decline message returned in case of error.
          type: string
          example: "Error contacting bank, please try again later"
        denialId:
          description: Decline ID returned in case of error.
          type: integer
          example: 925013101000000000
        approved:
          description: Approval status of the transaction.
          type: boolean
          example: true
        paymentUniqueId:
          description: Unique key connected to payment account.
          type: string
          example: z8Zprmki+WoAyOwj74Ei3w
        sessionId:
          description: Unique session ID value for transaction.
          type: string
          example: null
        subscriptionId:
          description: Subscription ID associated with the transaction.
          type: string
          example: 925014201000000300
        newPaymentTokenId:
          description: New payment token for subsequent transactions.
          type: string
          example: null
    TransactionRequest:
      description: Request parameters for initiating a transaction request for a customer.
      type: object
      properties:
        clientAccnum:
          description: Merchant account number.
          type: integer
          format: int32
        clientSubacc:
          description: Merchant subaccount number
          type: integer
          format: int32
        initialPrice:
          description: Price for the initial subscription period.
          type: number
          format: decimal
          example: 10
        initialPeriod:
          description: Initial subscription period after which the first recurring price will be charged.
          type: integer
          format: int64
          example: 30
        currencyCode:
          description: 3-digit currency code used for the transaction.
          type: integer
          example: 978
          format: int64
        recurringPrice:
          description: Price of the subscription renewal that will be charged regularly, after each recurring period.
          type: number
          format: decimal
          example: 5
        recurringPeriod:
          description: Renewal subscription period after which the next recurring price will be charged.
          type: integer
          format: int64
          example: 30
        rebills:
          description: Number of renewals for the recurring transaction.
          type: integer
          example: 12
          format: int64
        lifeTimeSubscription:
          description: Whether the subscription is eternal or not.
          type: boolean
          example: false
        createNewPaymentToken:
          description: Whether new payment token, that can be used for the subsequent transaction, should be generated and returned.
          type: boolean
          example: true
        passThroughInfo:
          description: Miscellaneous data that the merchant can pass in and will be provided back to them in the approval/denial background posts.
          type: array
          items:
            $ref: '#/components/schemas/PassThroughInfo'
      required:
        - clientAccnum
        - clientSubacc
        - initialPrice
        - initialPeriod
    ValidationError:
      type: object
      properties:
        field:
          description: Field in error
          type: string
        message:
          description: User friendly message
          type: string
      required:
        - field
        - message
      example:
        field: string
        message: string
    Error:
      type: object
      properties:
        id:
          pattern: ^[a-zA-Z0-9-]*$
          description: The unique ID used to locate an error in the logs.
          type: string
          format: uuid
        errorCode:
          pattern: ^[0-9]*$
          description: Product defined error code.
          type: integer
          format: int32
        generalMessage:
          description: The general user message.
          type: string
          nullable: true
        url:
          description: The requested relative URL that has caused this error response.
          type: string
          format: uri-reference
        timestamp:
          description: The timestamp of the request that resulted in this error response.
          type: string
          format: date-time
        errors:
          description: List of validation errors, which resulted in this error response.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
  parameters:
    trait_versioned_Accept:
      name: '200'
      in: header
      description: API version
      schema:
        type: string
  requestBodies: {}
  headers: {}
  links: {}
  callbacks: {}