openapi: 3.0.0
info:
  title: RESTful API Endpoints
  version: 1.0.0
servers:
  - url: https://api.ccbill.com
    description: Production Server
tags:
  - name: /transactions
    description: |-
      Use the `/transactions` endpoint to create a charge for an existing or new customer, or to retrieve data on a charge.
      A charge can represent a transaction on a customer's billing details by a sponsor, based on a token obtained from an affiliate that identifies one of their clients.
security:
  - bearerAuth: []
paths:
  /transactions/payment-tokens/{paymentTokenId}:
    get:
      tags:
        - /transactions
      summary: View previous charge
      description: |-
        Use this endpoint to obtain data on a previously made charge. You will need to identify the charge by the ID.
        Supply the payment token ID as a URI parameter.
      parameters:
        - name: paymentTokenId
          in: path
          required: true
          schema:
            type: string
          example: ee0d05a3c41127025decd7c37855f42a
        - name: clientAccnum
          in: query
          required: true
          schema:
            type: integer
            format: int32
          description: Merchant's account number.
          example: 900684
        - name: clientSubacc
          in: query
          required: false
          schema:
            type: integer
          description: Merchant's subaccount number.
          example: 3
      responses:
        '200':
          description: List of retrieved Transaction objects
          content:
            application/vnd.mcn.transaction-service.api.v.2+json:
              schema:
                $ref: '#/components/schemas/PaymentTokenTransaction'
              examples:
                Single-subaccount transactions charged by a Payment Token:
                  description: List of transactions made by a merchant using a single subaccount.
                  value:
                    - clientAccnum: 900684
                      clientSubacc: 0
                      subscriptionId: "924313501000000101"
                    - clientAccnum: 900684
                      clientSubacc: 0
                      subscriptionId: "924313501000000102"
                Multi-subaccount transactions charged by a Payment Token:
                  description: List of transactions made by a merchant using multiple subaccounts.
                  value:
                    - clientAccnum: 900684
                      clientSubacc: 0
                      subscriptionId: "924313501000000101"
                    - clientAccnum: 900684
                      clientSubacc: 1
                      subscriptionId: "924313501000000102"
            application/vnd.mcn.transaction-service.api.v.1+json:
              schema:
                $ref: '#/components/schemas/PaymentTokenTransaction'
              examples:
                Single-subaccount transactions charged by a Payment Token:
                  description: List of transactions made by a merchant using a single subaccount.
                  value:
                    - clientAccnum: 900684
                      clientSubacc: 0
                      subscriptionId: "924313501000000101"
                    - clientAccnum: 900684
                      clientSubacc: 0
                      subscriptionId: "924313501000000102"
                Multi-subaccount transactions charged by a Payment Token:
                  description: List of transactions made by a merchant using multiple subaccounts.
                  value:
                    - clientAccnum: 900684
                      clientSubacc: 0
                      subscriptionId: "924313501000000101"
                    - clientAccnum: 900684
                      clientSubacc: 1
                      subscriptionId: "924313501000000102"
        '400':
          description: Bad request. This response failed due to an invalid header, query, or request body parameter.
          content:
            application/vnd.com.cwie.error.v1.+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Bad Request:
                  description: |- 
                    Returned when `paymentTokenId` or one of the query parameters is not valid.<br>
                    <em>Note</em>: For completeness the `errors` array in this example holds errors for all existing validated fields, but any subset of these can be returned.
                  value:
                    {
                      "id": "5ea81718-6617-42d1-8852-77e5a18ecb57",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [
                        {
                          "field": "clientAccnum",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientAccnum",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "clientAccnum",
                          "message": "Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'clientAccnum'; For input string: \"abc\""
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'clientSubacc'; For input string: \"abc\""
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2024-12-30T14:58:56.914Z"
                    }
        '401':
          description: Unauthorized. Returned when the caller is not authorized to perform the requested action. This response does not have a response body.
        '403':
          description: Forbidden. Returned when the caller does not have adequate permissions to access the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Forbidden:
                 value:
                  {
                    "id": "89e8a24a-e1b3-4366-a968-20d21b1023f3",
                    "url": "/transactions/payment-tokens/{paymentTokenId}",
                    "errors": [],
                    "generalMessage": "Forbidden",
                    "errorCode": 100020,
                    "timestamp": "2024-12-30T09:10:16.615Z"
                  }
        '404':
          description: Not Found. Returned when the requested resource or any of the required related resources is not found.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Found:
                  value:
                    {
                      "id": "98efcc51-51aa-4989-bd35-88041489c8d1",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Not Found",
                      "errorCode": 130000,
                      "timestamp": "2024-12-27T15:06:01.190Z"
                    }

        '405':
          description: Method Not Allowed. Returned when the requested method is not allowed for the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Method Not Allowed:
                  value:
                    {
                      "id": "399f8978-e8f0-48f9-bedc-e1725534cc6b",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Method Not Allowed",
                      "errorCode": 130000,
                      "timestamp": "2024-12-30T09:21:25.724Z"
                    }
        '406':
          description: Not Acceptable. Returned when the requested media type is not supported.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Acceptable:
                  value:
                    {
                      "id": "4dfa73a9-9fd0-4995-9e00-4984464c3f91",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "Not Acceptable",
                      "errorCode": 100015,
                      "timestamp": "2024-12-30T09:45:11.962Z"
                    }
        '500':
          description: Internal Server Error. Returned when the server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Internal Server Error:
                  value:
                    {
                      "id": "f82d6175-c992-4342-8271-7a181d031415",
                      "url": "/transactions/payment-tokens/{paymentTokenId}",
                      "errors": [],
                      "generalMessage": "An error occurred, please try again later.",
                      "errorCode": 100100,
                      "timestamp": "2024-12-30T13:50:51.218Z"
                    }
components:
  schemas:
    PaymentTokenTransaction:
      type: array
      items:
        type: object
        properties:
          clientAccnum:
            description: Merchant's account number.
            type: integer
          clientSubacc:
            description: Merchant's subaccount number.
            type: integer
          subscriptionId:
            description: Subscription ID to which the transaction belongs.
            type: string
        required:
          - clientAccnum
          - clientSubacc
          - subscriptionId
    ValidationError:
      type: object
      properties:
        field:
          description: Field in error
          type: string
        message:
          description: User friendly message
          type: string
      required:
        - field
        - message
      example:
        field: string
        message: string
    Error:
      type: object
      properties:
        id:
          description: The unique ID used to locate an error in the logs.
          type: string
          format: uuid
        errorCode:
          description: Product defined error code.
          type: integer
          format: int32
        generalMessage:
          description: The general user message.
          type: string
          nullable: true
        url:
          description: The requested relative URL that has caused this error response.
          type: string
          format: uri-reference
        timestamp:
          description: The timestamp of the request that resulted in this error response.
          type: string
          format: date-time
        errors:
          description: List of validation errors, which resulted in this error response.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
  parameters:
    trait_versioned_Accept:
      name: '200'
      in: header
      description: API version
      schema:
        type: string
  examples:
    PaymentTokenMerchantOnlyParamsRequired:
      summary: Required fields
      value:
        clientAccnum: 900000
        clientSubacc: 2
        customerInfo:
          $ref: '#/components/examples/CustomerInfoRequired/value'
        paymentInfo:
          creditCardPaymentInfo:
            $ref: '#/components/examples/CreditCardPaymentInfo/value'
        subscriptionId: 900000000000000000
    PaymentTokenMerchantOnlyParamsAll:
      summary: All fields
      value:
        clientAccnum: 900000
        clientSubacc: 2
        customerInfo:
          $ref: '#/components/examples/CustomerInfoAll/value'
        paymentInfo:
          creditCardPaymentInfo:
            $ref: '#/components/examples/CreditCardPaymentInfo/value'
        subscriptionId: 900000000000000000
        timeToLive: 30
        validNumberOfUse: 3
    PaymentTokenMerchantOnlyVerifyParamsRequired:
      summary: Required fields
      value:
        clientAccnum: 900000
        clientSubacc: 2
        customerInfo:
          $ref: '#/components/examples/CustomerInfoRequired/value'
        paymentInfo:
          creditCardPaymentInfo:
            $ref: '#/components/examples/CreditCardWithCvvPaymentInfo/value'
        subscriptionId: 900000000000000000
    PaymentTokenMerchantOnlyVerifyParamsAll:
      summary: All fields
      value:
        clientAccnum: 900000
        clientSubacc: 2
        customerInfo:
          $ref: '#/components/examples/CustomerInfoAll/value'
        paymentInfo:
          creditCardPaymentInfo:
            $ref: '#/components/examples/CreditCardWithCvvPaymentInfo'
        subscriptionId: 900000000000000000
        timeToLive: 30
        validNumberOfUse: 3
    CustomerInfoAll:
      value:
        customerFname: Tyler
        customerLname: Thomas
        address1: Woodland Drive
        address2: Apt 21
        city: Tempe
        state: AZ
        zipcode: '85281'
        country: US
        phoneNumber: '5555555555'
        email: tthomas@xyz.com
        ipAddress: 10.70.60.14
        browserHttpUserAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0
        browserHttpAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
        browserHttpAcceptLanguage: en-US,en;q=0.5
        browserHttpAcceptEncoding: gzip, deflate, br
    CustomerInfoRequired:
      value:
        customerFname: Tyler
        customerLname: Thomas
        zipcode: '85281'
        country: US
        email: tthomas@xyz.com
        ipAddress: 10.70.60.14
    CreditCardWithCvvPaymentInfo:
      value:
        cardNum: '4473707989493598'
        nameOnCard: Tyler Thomas
        expMonth: '04'
        expYear: '2026'
        cvv2: '123'
    CreditCardPaymentInfo:
      value:
        cardNum: '4473707989493598'
        nameOnCard: Tyler Thomas
        expMonth: '04'
        expYear: '2026'
  requestBodies: {}
  headers: {}
  links: {}
  callbacks: {}