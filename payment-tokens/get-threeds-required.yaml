openapi: 3.0.0
info:
  title: RESTful API Endpoints
  version: 1.0.0
servers:
  - url: https://api.ccbill.com
    description: Production Server
tags:
  - name: /payment-tokens
    description: Use the `/payment-tokens` resource to create a token that identifies a user in the system. The token can be passed on to the system in a transaction request, thus enabling you to bill a customer.
security:
  - bearerAuth: []
paths:
  /payment-tokens/threeds-required:
    get:
      tags:
        - /payment-tokens
      summary: 3DS card check
      description: Use this request to determine if a payment card must undergo 3DS verification. The financial institution that issued the payment card to the cardholder (the customer's bank) needs to support the 3DS function. The issuing bank authenticates the transaction, and either approves or declines it.<br><br>
      x-codeSamples:
        - lang: bash
          label: cURL
          source: |
            curl -X GET "https://api.ccbill.com/payment-tokens/threeds-required?bin=411111&last4=1111&clientAccnum=900000&clientSubacc=2" \
            -H "accept: application/vnd.mcn.transaction-service.api.v.2+json"\
            -H "authorization: Bearer [access_token]" \
        - lang: javascript
          label: JavaScript
          source: |
            var data = null;
            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;
            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === 4) {
                console.log(this.responseText);
              }
            });
            xhr.open("GET", "https://api.ccbill.com/payment-tokens/threeds-required?bin=411111&last4=1111&clientAccnum=900000&clientSubacc=2");
            xhr.setRequestHeader("Authorization", "Bearer [access_token]");
            xhr.setRequestHeader("Accept", "application/vnd.mcn.transaction-service.api.v.2+json");
            xhr.setRequestHeader("Cache-Control", "no-cache");
            xhr.send(data);
        - lang: php
          label: PHP
          source: |
            <?php
            $request = new HttpRequest();
            $request--->setUrl('https://api.ccbill.com/payment-tokens/threeds-required');
            $request->setMethod(HTTP_METH_GET);
            $request->setQueryData(array(
              'bin' => '411111',
              'last4' => '1111',
              'clientAccnum' => '900684',
              'clientSubacc' => '0000'
            ));
            $request->setHeaders(array(
              'cache-control' => 'no-cache',
              'Accept' => 'application/vnd.mcn.transaction-service.api.v.2+json',
              'Authorization' => 'Bearer [access_token]'
            ));
            try {
              $response = $request->send();
              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
            ?>
      parameters:
        - name: bin
          in: query
          required: true
          description: The Bank Identification Number (Usually the first 4-6 digits of the card number).
          schema:
            type: integer
            format: int64
          example: 530664
        - name: last4
          in: query
          required: true
          description: The last 4 digits of the credit card number.
          schema:
            type: string
          example: "8087"
        - name: clientAccnum
          in: query
          required: true
          description: Merchant's account number.
          schema:
            type: integer
            format: int32
          example: 900684
        - name: clientSubacc
          in: query
          required: true
          description: Merchant's sub-account number.
          schema:
            type: integer
            format: int32
          example: 3
        - name: currencyCode
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 840
              - 978
              - 826
              - 124
              - 36
              - 392
          example: 978
          description: |-
            Three digit currency code.  The following are available:
              - USD - 840
              - EUR - 978
              - GBP - 826
              - CAD - 124
              - AUD - 036
              - JPY - 392
        - name: Widget-Version
          in: header
          schema:
            default: Unversioned
            example: 1.11.0
            type: string
          description: Version of the MCN Widget making the call
      responses:
        '200':
          description: Successful Response
          content:
            application/vnd.mcn.transaction-service.api.v.2+json:
              schema:
                type: boolean
                example: true
        '400':
          description: Bad Request. The response failed to complete due to an invalid header, query or request body parameter. This response does not differ between versions.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Bad Request:
                  description: |- 
                    Returned when one of `requestBody`'s fields is not valid.<br>
                    <em>Note</em>: For completeness the `errors` array in this example holds errors for all existing validated fields, but any subset of these can be returned.
                  value:
                    {
                      "id": "62432dd8-97d9-400a-8da8-4a5c1951f935",
                      "url": "/payment-tokens/threeds-required",
                      "errors": [
                        {
                          "field": "bin",
                          "message": "Attribute required"
                        },
                        {
                          "field": "bin",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "bin",
                          "message": "Invalid credit card type"
                        },
                        {
                          "field": "bin",
                          "message": "Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Long' for property 'bin'; For input string: \"abc\""
                        },
                        {
                          "field": "last4",
                          "message": "Attribute required"
                        },
                        {
                          "field": "last4",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "clientAccnum",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientAccnum",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "clientAccnum",
                          "message": "Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'clientAccnum'; For input string: \"abc\""
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'clientSubacc'; For input string: \"abc\""
                        },
                        {
                          "field": "currencyCode",
                          "message": "Attribute required"
                        },
                        {
                          "field": "currencyCode",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "currencyCode",
                          "message": "Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'currencyCode'; For input string: \"abc\""
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": "200000",
                      "timestamp": "2024-11-25T12:26:34.793Z"
                    }
        '401':
          description: Unauthorized. Returned when the caller is not authorized to perform the requested action. This response does not have a response body.
        '403':
          description: Forbidden. Returned when the caller does not have adequate permissions to access the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Forbidden:
                 value:
                  {
                    "id": "89e8a24a-e1b3-4366-a968-20d21b1023f3",
                    "url": "/payment-tokens/threeds-required",
                    "errors": [],
                    "generalMessage": "Forbidden",
                    "errorCode": 100020,
                    "timestamp": "2024-12-30T09:10:16.615Z"
                  }
        '404':
          description: Not Found. Returned when the requested resource or any of the required related resources is not found.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Found:
                  value:
                    {
                      "id": "98efcc51-51aa-4989-bd35-88041489c8d1",
                      "url": "/payment-tokens/threeds-required",
                      "errors": [],
                      "generalMessage": "Not Found",
                      "errorCode": 130000,
                      "timestamp": "2024-12-27T15:06:01.190Z"
                    }

        '405':
          description: Method Not Allowed. Returned when the requested method is not allowed for the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Method Not Allowed:
                  value:
                    {
                      "id": "399f8978-e8f0-48f9-bedc-e1725534cc6b",
                      "url": "/payment-tokens/threeds-required",
                      "errors": [],
                      "generalMessage": "Method Not Allowed",
                      "errorCode": 130000,
                      "timestamp": "2024-12-30T09:21:25.724Z"
                    }
        '406':
          description: Not Acceptable. Returned when the requested media type is not supported.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Acceptable:
                  value:
                    {
                      "id": "4dfa73a9-9fd0-4995-9e00-4984464c3f91",
                      "url": "/payment-tokens/threeds-required",
                      "errors": [],
                      "generalMessage": "Not Acceptable",
                      "errorCode": 100015,
                      "timestamp": "2024-12-30T09:45:11.962Z"
                    }
        '500':
          description: Internal Server Error. Returned when the server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Internal Server Error:
                  value:
                    {
                      "id": "f82d6175-c992-4342-8271-7a181d031415",
                      "url": "/payment-tokens/threeds-required",
                      "errors": [],
                      "generalMessage": "An error occurred, please try again later.",
                      "errorCode": 100100,
                      "timestamp": "2024-12-30T13:50:51.218Z"
                    }
components:
  schemas:
    ValidationError:
      type: object
      properties:
        field:
          description: Field in error
          type: string
        message:
          description: User friendly message
          type: string
      required:
        - field
        - message
      example:
        field: string
        message: string
    Error:
      type: object
      properties:
        id:
          pattern: ^[a-zA-Z0-9-]*$
          description: Randomly generated GUID
          type: string
        url:
          description: The RELATIVE url that has caused this error
          type: string
        generalMessage:
          description: Something human readable
          type: string
        errorCode:
          pattern: ^[0-9]*$
          description: Product defined error code
          type: string
        timestamp:
          description: Timestamp of the call
          type: string
          format: date-time
      required:
        - id
        - url
        - generalMessage
        - errorCode
        - timestamp
      example:
        id: string
        url: specific/endpoint
        generalMessage: General error message
        errorCode: "100013"
        timestamp: '2022-03-02T11:04:47.729Z'
    Error:
      type: object
      properties:
        id:
          pattern: ^[a-zA-Z0-9-]*$
          description: The unique ID used to locate an error in the logs.
          type: string
          format: uuid
        errorCode:
          pattern: ^[0-9]*$
          description: Product defined error code.
          type: integer
          format: int32
        generalMessage:
          description: The general user message.
          type: string
          nullable: true
        url:
          description: The requested relative URL that has caused this error response.
          type: string
          format: uri-reference
        timestamp:
          description: The timestamp of the request that resulted in this error response.
          type: string
          format: date-time
        errors:
          description: List of validation errors, which resulted in this error response.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
  responses:
    '400':
      description: The response failed to complete due to an invalid header/parameter in the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
    '401':
      description: The response failed to complete due to authorization problem.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error401'
    '403':
      description: The response failed to complete because access to the resource is forbidden.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
    '404':
      description: The response failed to complete due to an invalid resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
    '405':
      description: The response failed to complete due to an invalid method of request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
    '406':
      description: The response failed to complete due to an unacceptable media type in the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
    '415':
      description: The response failed to complete due to an unsupported media type in the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
    '500':
      description: The response failed to complete in some way.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
  parameters:
    trait_versioned_Accept:
      name: '200'
      in: header
      description: API version
      schema:
        type: string
  requestBodies: {}
  headers: {}
  links: {}
  callbacks: {}