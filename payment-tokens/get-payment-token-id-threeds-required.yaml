openapi: 3.0.0
info:
  title: RESTful API Endpoints
  version: 1.0.0
servers:
  - url: https://api.ccbill.com
    description: Production Server
tags:
  - name: /payment-tokens
    description: Use the `/payment-tokens` resource to create a token that identifies a user in the system. The token can be passed on to the system in a transaction request, thus enabling you to bill a customer.
  - name: /transactions
    description: |-
      Use the `/transactions` endpoint to create a charge for an existing or new customer, or to retrieve data on a charge.
      A charge can represent a transaction on a customer's billing details by a sponsor, based on a token obtained from an affiliate that identifies one of their clients.
security:
  - bearerAuth: []
paths:
  /payment-tokens/{paymentTokenId}/threeds-required:
    get:
      tags:
        - /payment-tokens
      summary: 3DS payment token check
      description: Use this endpoint to determine if a transaction must undergo 3DS verification based on the payment token ID.<br><br> European laws, such as <a href="https://ccbill.com/blog/what-is-psd2" target="_blank">PSD2</a>, require the use of <a href="https://ccbill.com/kb/strong-customer-authentication" target="_blank">Strong Customer Authentication</a>, such as the <a href="https://ccbill.com/kb/3d-secure-2" target="_blank">3DS</a> protocol, for online payment processing.<br><br> When an EU-based cardholder makes a payment online, SCA is initiated. Merchants can use CCBill's Advanced Widget and its functions to facilitate strong customer authentication.
      x-codeSample:
        - lang: bash
          label: cURL
          source: |
            curl -X GET \
            https://api.ccbill.com/payment-tokens/01f1142953204411a7e399e0f100fc4d/threeds-required \
            -H 'Authorization: Bearer [access_token]' \
            -H 'Cache-Control: no-cache' \
            -H 'Accept: application/vnd.mcn.transaction-service.api.v.2+json'
      parameters:
        - name: paymentTokenId
          in: path
          required: true
          schema:
            type: string
          description: Previously created Payment Token.
          example: "ee0d05a3c41127025decd7c37855f42a"
        - name: currencyCode
          in: query
          required: true
          schema:
            type: integer
            format: int32
            enum:
              - 840
              - 978
              - 826
              - 124
              - 36
              - 392
          description: |-
            Currency code.  The following are available:
              - USD - 840
              - EUR - 978
              - GBP - 826
              - CAD - 124
              - AUD - 036
              - JPY - 392
          example: 978
        - name: Widget-Version
          in: header
          schema:
            default: Unversioned
            example: 1.11.0
            type: string
          description: Version of the MCN Widget making the call

      responses:
        '200':
          description: Successful Response whether 3DS is required.
          content:
            application/vnd.mcn.transaction-service.api.v.2+json:
              schema:
                type: boolean
                example: true
        '400':
          description: Bad request. This response failed due to an invalid header, query, or request body parameter.
          content:
            application/vnd.com.cwie.error.v1.+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Bad Request:
                  description: |- 
                    Returned when one of `requestBody`'s fields is not valid.<br>
                    <em>Note</em>: For completeness the `errors` array in this example holds errors for all existing validated fields, but any subset of these can be returned.
                  value:
                    {
                      "id": "ca57c40c-b8b5-47af-bf46-2cb2213549ad",
                      "url": "/payment-tokens/{paymentTokenId}/threeds-required",
                      "errors": [
                        {
                          "field": "paymentTokenId",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "paymentTokenId",
                          "message": "Problem with the attribute values"
                        },
                        {
                          "field": "currencyCode",
                          "message": "Attribute required"
                        },
                        {
                          "field": "currencyCode",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "currencyCode",
                          "message": "Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'currencyCode'; For input string: \"abc\""
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": "200000",
                      "timestamp": "2024-11-25T12:26:34.793Z"
                    }
        '401':
          description: Unauthorized. Returned when the caller is not authorized to perform the requested action. This response does not have a response body.
        '403':
          description: Forbidden. Returned when the caller does not have adequate permissions to access the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Forbidden:
                 value:
                  {
                    "id": "89e8a24a-e1b3-4366-a968-20d21b1023f3",
                    "url": "/payment-tokens/{paymentTokenId}/threeds-required",
                    "errors": [],
                    "generalMessage": "Forbidden",
                    "errorCode": 100020,
                    "timestamp": "2024-12-30T09:10:16.615Z"
                  }
        '404':
          description: Not Found. Returned when the requested resource or any of the required related resources is not found.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Found:
                  value:
                    {
                      "id": "98efcc51-51aa-4989-bd35-88041489c8d1",
                      "url": "/payment-tokens/{paymentTokenId}/threeds-required",
                      "errors": [],
                      "generalMessage": "Not Found",
                      "errorCode": 130000,
                      "timestamp": "2024-12-27T15:06:01.190Z"
                    }

        '405':
          description: Method Not Allowed. Returned when the requested method is not allowed for the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Method Not Allowed:
                  value:
                    {
                      "id": "399f8978-e8f0-48f9-bedc-e1725534cc6b",
                      "url": "/payment-tokens/{paymentTokenId}/threeds-required",
                      "errors": [],
                      "generalMessage": "Method Not Allowed",
                      "errorCode": 130000,
                      "timestamp": "2024-12-30T09:21:25.724Z"
                    }
        '406':
          description: Not Acceptable. Returned when the requested media type is not supported.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Acceptable:
                  value:
                    {
                      "id": "4dfa73a9-9fd0-4995-9e00-4984464c3f91",
                      "url": "/payment-tokens/{paymentTokenId}/threeds-required",
                      "errors": [],
                      "generalMessage": "Not Acceptable",
                      "errorCode": 100015,
                      "timestamp": "2024-12-30T09:45:11.962Z"
                    }
        '500':
          description: Internal Server Error. Returned when the server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Internal Server Error:
                  value:
                    {
                      "id": "f82d6175-c992-4342-8271-7a181d031415",
                      "url": "/payment-tokens/{paymentTokenId}/threeds-required",
                      "errors": [],
                      "generalMessage": "An error occurred, please try again later.",
                      "errorCode": 100100,
                      "timestamp": "2024-12-30T13:50:51.218Z"
                    }
components:
  schemas:
    ThreeDSRequired:
      description: Response parameters after 3DS authentication request.
      type: object
      properties:
        required:
          description: 3DS required for payment card
          type: boolean
      example:
        required: 'true'
    ValidationError:
      type: object
      properties:
        field:
          description: Field in error
          type: string
        message:
          description: User friendly message
          type: string
      required:
        - field
        - message
      example:
        field: string
        message: string
    Error:
      type: object
      properties:
        id:
          description: The unique ID used to locate an error in the logs.
          type: string
          format: uuid
        errorCode:
          description: Product defined error code.
          type: integer
          format: int32
        generalMessage:
          description: The general user message.
          type: string
          nullable: true
        url:
          description: The requested relative URL that has caused this error response.
          type: string
          format: uri-reference
        timestamp:
          description: The timestamp of the request that resulted in this error response.
          type: string
          format: date-time
        errors:
          description: List of validation errors, which resulted in this error response.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
  parameters:
    trait_versioned_Accept:
      name: '200'
      in: header
      description: API version
      schema:
        type: string
  requestBodies: {}
  headers: {}
  links: {}
  callbacks: {}