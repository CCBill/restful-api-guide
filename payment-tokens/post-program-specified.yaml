openapi: 3.0.0
info:
  title: RESTful API Endpoints
  version: 1.0.0
servers:
  - url: https://api.ccbill.com
    description: Production Server
tags:
  - name: /payment-tokens
    description: Use the `/payment-tokens` resource to create a token that identifies a user in the system. The token can be passed on to the system in a transaction request, thus enabling you to bill a customer.
security:
  - bearerAuth: []
paths:
  /payment-tokens/program-specified:
    post:
      tags:
        - /payment-tokens
      summary: Generate payment token for specified program participants
      description: |-
        This endpoint allows merchants to generate payment tokens for cross-sale opportunities with other specified program participants (merchants).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTokenProgramSpecifiedParams'
            examples:
              Single use program-specified Payment Token creation (without providing CVV):
                value:
                  {
                    "clientAccnum": 900684,
                    "clientSubacc": 0,
                    "subscriptionId": 0,
                    "programParticipationId": 4456,
                    "customerInfo": {
                      "customerFname": "Tyler",
                      "customerLname": "Thomas",
                      "address1": "Woodland Drive",
                      "address2": "Apt 21",
                      "city": "Tempe",
                      "state": "AZ",
                      "zipcode": "85281",
                      "country": "US",
                      "phoneNumber": "5555555555",
                      "email": "tthomas@xyz.com",
                      "ipAddress": "10.70.60.14'",
                      "browserHttpUserAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0",
                      "browserHttpAccept": "application/json",
                      "browserHttpAcceptLanguage": "en-US",
                      "browserHttpAcceptEncoding": "gzip"
                    },
                    "paymentInfo": {
                      "creditCardPaymentInfo": {
                        "cardNum": "4473707989493598",
                        "nameOnCard": "Tyler Thomas",
                        "expMonth": "04",
                        "expYear": "2019"
                      }
                    },
                    "validNumberOfUse": 1
                  }
              24 hours valid program-specified Payment Token creation (without providing CVV):
                value:
                  {
                    "clientAccnum": 900684,
                    "clientSubacc": 0,
                    "subscriptionId": 0,
                    "programParticipationId": 4456,
                    "customerInfo": {
                      "customerFname": "Tyler",
                      "customerLname": "Thomas",
                      "address1": "Woodland Drive",
                      "address2": "Apt 21",
                      "city": "Tempe",
                      "state": "AZ",
                      "zipcode": "85281",
                      "country": "US",
                      "phoneNumber": "5555555555",
                      "email": "tthomas@xyz.com",
                      "ipAddress": "10.70.60.14'",
                      "browserHttpUserAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0",
                      "browserHttpAccept": "application/json",
                      "browserHttpAcceptLanguage": "en-US",
                      "browserHttpAcceptEncoding": "gzip"
                    },
                    "paymentInfo": {
                      "creditCardPaymentInfo": {
                        "cardNum": "4473707989493598",
                        "nameOnCard": "Tyler Thomas",
                        "expMonth": "04",
                        "expYear": "2019"
                      }
                    },
                    "timeToLive": 24
                  }
              Program-specified Payment Token creation using previous subscription:
                value:
                  {
                    "clientAccnum": 900684,
                    "clientSubacc": 0,
                    "subscriptionId": 924366201000000000,
                    "programParticipationId": 4456
                  }
      responses:
        '200':
          description: Successful Response
          content:
            application/vnd.mcn.transaction-service.api.v.2+json:
              schema:
                $ref: '#/components/schemas/PaymentTokenV2'
              examples:
                Single use Payment Token response:
                  description: Created program-specified Payment Token object.
                  value:              
                    paymentTokenId: "019f5576d7f046c3a375e8a054f2c033"
                    programParticipationId: 4456
                    originalPaymentTokenId: null
                    clientAccnum: 900684
                    clientSubacc: 0
                    createdDatetime: "2024-11-08T12:22:51"
                    timeToLive: 2147483647
                    validNumberOfUse: 1
                    subscriptionId: "924313501000000101"
                    paymentInfoId: null
                24 hour Payment Token response:
                  value:              
                    paymentTokenId: "019f5576d7f046c3a375e8a054f2c033"
                    programParticipationId: 4456
                    originalPaymentTokenId: null
                    clientAccnum: 900684
                    clientSubacc: 0
                    createdDatetime: "2024-11-08T12:22:51"
                    timeToLive: 24
                    validNumberOfUse: 2147483647
                    subscriptionId: "924313501000000101"
                    paymentInfoId: null
            application/vnd.mcn.transaction-service.api.v.1+json:  
              schema:
                $ref: '#/components/schemas/PaymentToken'
              examples:
                Single use Payment Token response:
                  value:              
                    paymentTokenId: "019f5576d7f046c3a375e8a054f2c033"
                    programParticipationId: 4456
                    originalPaymentTokenId: null
                    clientAccnum: 900684
                    clientSubacc: 0
                    createdDatetime: "2024-11-08T12:22:51"
                    timeToLive: 2147483647
                    validNumberOfUse: 1
                    subscriptionId: 924313501000000101
                    paymentInfoId: null
                24 hour Payment Token response:
                  value:              
                    paymentTokenId: "019f5576d7f046c3a375e8a054f2c033"
                    programParticipationId: 4456
                    originalPaymentTokenId: null
                    clientAccnum: 900684
                    clientSubacc: 0
                    createdDatetime: "2024-11-08T12:22:51"
                    timeToLive: 24
                    validNumberOfUse: 2147483647
                    subscriptionId: 924313501000000101
                    paymentInfoId: null
        '400':
          description: Bad Request. The response failed to complete due to an invalid header, query or request body parameter. This response does not differ between versions.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Bad Request:
                  description: |- 
                    Returned when one of `requestBody`'s fields is not valid.<br>
                    <em>Note</em>: For completeness the `errors` array in this example holds errors for all existing validated fields, but any subset of these can be returned.
	
                  value:
                    {
                      "id": "a90a6a04-da1a-4b58-a78d-f55e1bc09efd",
                      "url": "/payment-tokens/program-specified",
                      "errors": [
                        {
                          "field": "clientAccnum",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientAccnum",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Attribute required"
                        },
                        {
                          "field": "clientSubacc",
                          "message": "Problem with attribute size"
                        },
                        {
                          "field": "subscriptionId",
                          "message": "Attribute required"
                        },
                        {
                          "field": "programParticipationId",
                          "message": "Attribute required"
                        },
                        {
                          "field": "customerInfo.customerFname",
                          "message": "Attribute required"
                        },
                        {
                          "field": "customerInfo.customerLname",
                          "message": "Attribute required"
                        },
                        {
                          "field": "customerInfo.email",
                          "message": "Attribute required"
                        },
                        {
                          "field": "customerInfo.email",
                          "message": "Invalid email address"
                        },
                        {
                          "field": "customerInfo.country",
                          "message": "Attribute required"
                        },
                        {
                          "field": "customerInfo.country",
                          "message": "Invalid postal code"
                        },
                        {
                          "field": "customerInfo.zipcode",
                          "message": "Invalid postal code"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo",
                          "message": "Attribute required"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo.cardNum",
                          "message": "Attribute required"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo.cardNum",
                          "message": "Invalid credit card number"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo.expMonth",
                          "message": "Attribute required"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo.expMonth",
                          "message": "Problem with the attribute values"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo.expYear",
                          "message": "Attribute required"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo.expYear",
                          "message": "Problem with the attribute values"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo.expYear",
                          "message": "Invalid expiration year"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo.nameOnCard",
                          "message": "Attribute required"
                        },
                        {
                          "field": "paymentInfo.creditCardPaymentInfo.nameOnCard",
                          "message": "Problem with the attribute values"
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2024-12-31T07:37:34.748Z"
                    }
                Customer and Payment information required:
                  description: Returned when either `customerInfo` or `paymentInfo` fields are not provided and `subscriptionId` field is `0`.
                  value:
                    {
                      "id": "a90a6a04-da1a-4b58-a78d-f55e1bc09efd",
                      "url": "/payment-tokens/program-specified",
                      "errors": [
                        {
                          "field": null,
                          "message": "Customer and Payment Information required for zero Subscription ID"
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2024-12-31T07:37:34.748Z"
                    }
                Invalid subscription ID:
                  description: Returned when subscription with the provided `subscriptionId` is not found, inactive, not properly formated or does not belong to the provided merchant.
                  value:
                    {
                      "id": "62432dd8-97d9-400a-8da8-4a5c1951f935",
                      "url": "/payment-tokens/program-specified",
                      "errors": [
                        {
                          "field": "subscriptionId",
                          "message": "Invalid Subscription ID"
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2025-01-02T07:27:45.734Z"
                    }
                Non-existent program participation:
                  description: Returned when program for the provided `programParticipationId` does not exist, or it does not exist between the provided merchants.
                  value:
                    {
                      "id": "1c726d8f-c7ef-4bcf-b206-878d23af1a8b",
                      "url": "/payment-tokens/program-specified",
                      "errors": [
                        {
                          "field": null,
                          "message": "Program does not exist between merchants"
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2024-11-20T12:23:12.998Z"
                    }
                Invalid program participation ID:
                  description: Returned when program for the provided `programParticipationId` does not belong to the provided merchant.
                  value:
                    {
                      "id": "a90a6a04-da1a-4b58-a78d-f55e1bc09efd",
                      "url": "/payment-tokens/program-specified",
                      "errors": [
                        {
                          "field": "programParticipationId",
                          "message": "Invalid Program Participation ID"
                        }
                      ],
                      "generalMessage": "Validation failed!",
                      "errorCode": 200000,
                      "timestamp": "2025-01-20T22:45:32.198Z"
                    }
        '401':
          description: Unauthorized. Returned when the caller is not authorized to perform the requested action. This response does not have a response body.
        '403':
          description: Forbidden. Returned when the caller does not have adequate permissions to access the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Forbidden:
                 value:
                  {
                    "id": "89e8a24a-e1b3-4366-a968-20d21b1023f3",
                    "url": "/payment-tokens/program-specified",
                    "errors": [],
                    "generalMessage": "Forbidden",
                    "errorCode": 100020,
                    "timestamp": "2024-12-30T09:10:16.615Z"
                  }
        '404':
          description: Not Found. Returned when the requested resource or any of the required related resources is not found.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Found:
                  value:
                    {
                      "id": "98efcc51-51aa-4989-bd35-88041489c8d1",
                      "url": "/payment-tokens/program-specified",
                      "errors": [],
                      "generalMessage": "Not Found",
                      "errorCode": 130000,
                      "timestamp": "2024-12-27T15:06:01.190Z"
                    }

        '405':
          description: Method Not Allowed. Returned when the requested method is not allowed for the requested resource.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Method Not Allowed:
                  value:
                    {
                      "id": "399f8978-e8f0-48f9-bedc-e1725534cc6b",
                      "url": "/payment-tokens/program-specified",
                      "errors": [],
                      "generalMessage": "Method Not Allowed",
                      "errorCode": 130000,
                      "timestamp": "2024-12-30T09:21:25.724Z"
                    }
        '406':
          description: Not Acceptable. Returned when the requested media type is not supported.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Acceptable:
                  value:
                    {
                      "id": "4dfa73a9-9fd0-4995-9e00-4984464c3f91",
                      "url": "/payment-tokens/program-specified",
                      "errors": [],
                      "generalMessage": "Not Acceptable",
                      "errorCode": 100015,
                      "timestamp": "2024-12-30T09:45:11.962Z"
                    }
        '415':
          description: Unsupported Media Type. Returned when the requested media type is not supported.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Unsupported Media Type:
                  value:
                    {
                      "id": "ac10e72b-0124-481c-a7f8-44875352cf87",
                      "url": "/payment-tokens/program-specified",
                      "errors": [],
                      "generalMessage": "Unsupported Media Type",
                      "errorCode": 100004,
                      "timestamp": "2024-12-30T19:39:18.861Z"
                    }
        '500':
          description: Internal Server Error. Returned when the server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/vnd.com.cwie.error.v1+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Internal Server Error:
                  value:
                    {
                      "id": "f82d6175-c992-4342-8271-7a181d031415",
                      "url": "/payment-tokens/program-specified",
                      "errors": [],
                      "generalMessage": "An error occurred, please try again later.",
                      "errorCode": 100100,
                      "timestamp": "2024-12-30T13:50:51.218Z"
                    }
components:
  schemas:
    PaymentToken:
      description: These response parameters are received when a payment token is successfully created.
      type: object
      properties:
        paymentTokenId:
          description: Complex representation of the Payment Token Id
          type: string
        programParticipationId:
          description: Program connected to the Payment Token
          type: integer
          format: int32
          nullable: true
        originalPaymentTokenId:
          description: Reference to a previous Token Id
          type: string
          nullable: true
        clientAccnum:
          description: Merchant account number
          type: integer
          format: int32
        clientSubacc:
          description: Merchant subaccount number
          type: integer
          format: int32
        createdDatetime:
          description: Date Time of creation of the Payment Token
          type: string
        timeToLive:
          description: Time for the token to exist
          type: integer
          format: int64
        validNumberOfUse:
          description: Total number of times the Payment Token can be used for purchases
          type: integer
          format: int64
        paymentInfoId:
          description: Information associated with the payment
          type: string
          nullable: true
        subscriptionId:
          description: Identification of the subscription associated with the transaction
          type: integer
          format: int64
    PaymentTokenV2:
      description: These response parameters are received when a payment token is successfully created.
      type: object
      properties:
        paymentTokenId:
          description: Complex representation of Payment Token Id
          type: string
        programParticipationId:
          description: Program connected to the Payment Token
          type: integer
          format: int32
          nullable: true
        originalPaymentTokenId:
          description: Reference to a previous Token Id
          type: string
          nullable: true
        clientAccnum:
          description: Merchant account number
          type: integer
          format: int32
        clientSubacc:
          description: Merchant subaccount number
          type: integer
          format: int32
        createdDatetime:
          description: Date Time of creation of the Payment Token
          type: string
        timeToLive:
          description: Time for the token to exist
          type: integer
          format: int64
        validNumberOfUse:
          description: Total number of times the Payment Token can be used for purchases
          type: integer
          format: int64
        paymentInfoId:
          description: Information associated with the payment
          type: string
          nullable: true
        subscriptionId:
          description: Identification of the subscription associated with the transaction
          type: string
    CreditCardPaymentInfo:
      description: Elements of the `paymentInfo` array.
      type: object
      properties:
        cardNum:
          description: Card number
          type: string
        expMonth:
          description: Card expiration month in mm format
          type: string
        expYear:
          description: Card expiration year in yyyy format
          type: string
        nameOnCard:
          description: Name as it appears on card
          type: string
      required:
        - cardNum
        - expMonth
        - expYear
        - nameOnCard
    CustomerInfo:
      description: Elements of the `customerInfo` array.
      type: object
      properties:
        address1:
          description: Customer's address
          type: string
        address2:
          description: Customer's address (additional info)
          type: string
        browserHttpAccept:
          description: Media type(s) that is(/are) acceptable for the response
          type: string
        browserHttpAcceptEncoding:
          description: List of acceptable encodings
          type: string
        browserHttpAcceptLanguage:
          description: List of acceptable human languages for response
          type: string
        browserHttpUserAgent:
          description: The user agent string of the user agent
          type: string
        city:
          description: Customer's city
          type: string
        country:
          description: Customer's country
          type: string
        customerFname:
          description: Customer's first name
          type: string
        customerLname:
          description: Customer's last name
          type: string
        email:
          description: Customer's email address
          type: string
        ipAddress:
          description: Customer's IP address
          type: string
        phoneNumber:
          description: Customer's phone number
          type: string
        state:
          description: Customer's state
          type: string
        zipcode:
          description: Customer's zip code
          type: string
      required:
        - country
        - customerFname
        - customerLname
        - email
        - ipAddress
        - zipcode
        - city
        - state
        - address1
    PaymentInfo:
      description: Payment information on the customer's payment card. Elements of the `creditCardPaymentInfo` array.
      type: object
      properties:
        creditCardPaymentInfo:
          description: Credit Card Payment Information
          allOf:
            - $ref: '#/components/schemas/CreditCardPaymentInfo'
    PaymentTokenVerify:
      description: |
        These response parameters are received when a payment token is successfully created, including <a href="https://ccbill.com/doc/avs-and-cvv2-responses" target="_blank">AVS and CVV2 authentication results</a>.
      type: object
      properties:
        paymentTokenId:
          description: "Complex representation of Payment Token Id"
          type: string
        programParticipationId:
          description: "Program connected to the Payment Token"
          type: integer
        originalPaymentTokenId:
          description: "Reference to a previous Token Id"
          type: string
        clientAccnum:
          description: "Merchant account number"
          type: integer
        clientSubacc:
          description: "Merchant subaccount number"
          type: integer
        createdDatetime:
          description: "Date Time of creation of the Payment Token"
          type: string
          format: date-time
        timeToLive:
          description: "Time for the token to exist"
          type: integer
        validNumberOfUse:
          description: "Total number of times the Payment Token can be used for purchases"
          type: integer
        subscriptionId:
          description: "Identification of the subscription associated with the transaction"
          type: integer
        paymentInfoId:
          description: "Information associated with the payment"
          type: string
        cvv2Response:
          description: |
            The result of CVV2 verification.
          type: string
          enum:
            - "M"  # CVV2 Match
            - "N"  # CVV2 No Match
            - "P"  # CVV2 Not Processed
            - "S"  # CVV2 Service Not Allowed
            - "U"  # CVV2 Unreadable
        avsResponse:
          description: |
             The result of AVS verification.
          type: string
          enum:
            - "A"  # Address matches, ZIP does not
            - "B"  # Address and ZIP match (both are blank)
            - "C"  # Address matches, ZIP does not
            - "D"  # Address matches, ZIP does not
            - "E"  # AVS error
            - "F"  # Address and ZIP match
            - "G"  # Address matches, ZIP does not
            - "H"  # Address and ZIP match
            - "I"  # AVS unavailable
            - "J"  # Address matches, ZIP does not
            - "K"  # Address matches, ZIP does not
            - "L"  # Address matches, ZIP does not
            - "M"  # Address and ZIP match
            - "N"  # Address and ZIP do not match
            - "O"  # Address and ZIP match (both are blank)
            - "P"  # Address and ZIP match (both are blank)
            - "Q"  # Address and ZIP match (both are blank)
            - "R"  # Address matches, ZIP does not
            - "S"  # Address matches, ZIP does not
            - "T"  # Address matches, ZIP does not
            - "U"  # Address matches, ZIP does not
            - "V"  # Address matches, ZIP does not
            - "W"  # Address matches, ZIP does not
            - "X"  # Address and ZIP match
            - "Y"  # Address and ZIP match
            - "Z"  # Address and ZIP match
      required:
        - paymentTokenId
        - programParticipationId
        - clientAccnum
        - clientSubacc
        - createdDatetime
        - timeToLive
        - validNumberOfUse
        - subscriptionId
        - cvv2Response
        - avsResponse
      example:
        paymentTokenId: "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        programParticipationId: 1
        originalPaymentTokenId: "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        clientAccnum: 900000
        clientSubacc: 0
        createdDatetime: '2022-01-01T01:00:00'
        timeToLive: 30
        validNumberOfUse: 20
        subscriptionId: 900000000000000000
        paymentInfoId: "53104f5a54d3d43254def41c29aedba8"
        cvv2Response: "M"
        avsResponse: "Y"

    PaymentTokenVerifyV2:
      description: |
        These response parameters are received when a payment token is successfully created, including <a href="https://ccbill.com/doc/avs-and-cvv2-responses" target="_blank">AVS and CVV2 authentication results</a>.
      type: object
      properties:
        paymentTokenId:
          description: "Complex representation of Payment Token Id"
          type: string
        programParticipationId:
          description: "Program connected to the Payment Token"
          type: integer
        originalPaymentTokenId:
          description: "Reference to a previous Token Id"
          type: string
        clientAccnum:
          description: "Merchant account number"
          type: integer
        clientSubacc:
          description: "Merchant subaccount number"
          type: integer
        createdDatetime:
          description: "Date Time of creation of the Payment Token"
          type: string
          format: date-time
        timeToLive:
          description: "Time for the token to exist"
          type: integer
        validNumberOfUse:
          description: "Total number of times the Payment Token can be used for purchases"
          type: integer
        subscriptionId:
          description: "Identification of the subscription associated with the transaction"
          type: string
        paymentInfoId:
          description: "Information associated with the payment"
          type: string
        cvv2Response:
          description: |
            The result of CVV2 verification. 
          type: string
          enum:
            - "M"  # CVV2 Match
            - "N"  # CVV2 No Match
            - "P"  # CVV2 Not Processed
            - "S"  # CVV2 Service Not Allowed
            - "U"  # CVV2 Unreadable
        avsResponse:
          description: |
            The result of AVS verification. 
          type: string
          enum:
            - "A"  # Address matches, ZIP does not
            - "B"  # Address and ZIP match (both are blank)
            - "C"  # Address matches, ZIP does not
            - "D"  # Address matches, ZIP does not
            - "E"  # AVS error
            - "F"  # Address and ZIP match
            - "G"  # Address matches, ZIP does not
            - "H"  # Address and ZIP match
            - "I"  # AVS unavailable
            - "J"  # Address matches, ZIP does not
            - "K"  # Address matches, ZIP does not
            - "L"  # Address matches, ZIP does not
            - "M"  # Address and ZIP match
            - "N"  # Address and ZIP do not match
            - "O"  # Address and ZIP match (both are blank)
            - "P"  # Address and ZIP match (both are blank)
            - "Q"  # Address and ZIP match (both are blank)
            - "R"  # Address matches, ZIP does not
            - "S"  # Address matches, ZIP does not
            - "T"  # Address matches, ZIP does not
            - "U"  # Address matches, ZIP does not
            - "V"  # Address matches, ZIP does not
            - "W"  # Address matches, ZIP does not
            - "X"  # Address and ZIP match
            - "Y"  # Address and ZIP match
            - "Z"  # Address and ZIP match
      required:
        - paymentTokenId
        - programParticipationId
        - clientAccnum
        - clientSubacc
        - createdDatetime
        - timeToLive
        - validNumberOfUse
        - subscriptionId
        - cvv2Response
        - avsResponse
      example:
        paymentTokenId: "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        programParticipationId: 1
        originalPaymentTokenId: "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
        clientAccnum: 900000
        clientSubacc: 0
        createdDatetime: '2022-01-01T01:00:00'
        timeToLive: 30
        validNumberOfUse: 20
        subscriptionId: '900000000000000001'
        paymentInfoId: "53104f5a54d3d43254def41c29aedba8"
        cvv2Response: "M"
        avsResponse: 'Y'
    PaymentTokenProgramSpecifiedParams:
      description: |-
        Holds all the information necessary for the creation of a Payment Token related to a participation program, without performing verification against the provided credit card details.
        `paymentInfo` and `customerInfo` fields are conditionally required, in case `subscriptionId` is `0`, or optional when it's not `0` and Charge by Previous is performed.
      type: object
      properties:
        clientAccnum:
          description: Merchant account number.
          type: integer
          format: int64
        clientSubacc:
          description: Merchant subaccount number.
          type: integer
          format: int32
        customerInfo:
          description: Customer Information
          allOf:
            - $ref: '#/components/schemas/CustomerInfo'
        paymentInfo:
          description: Payment Information
          allOf:
            - $ref: '#/components/schemas/PaymentInfo'
        subscriptionId:
          description: |-
            When `0` is provided, `customerInfo` and `paymentInfo` will be used to create Payment Token and save COF.
            When subscription ID of an existing transaction is provided, stored COF will be used to create the Payment Token.
          type: integer
          format: int64
        programParticipationId:
          description: Identifier represents the program associated with the transaction.
          type: integer
          format: int32
        timeToLive:
          description: Number of hours Payment Token is valid for.
          type: integer
          format: int64
          default: 2147483647
        validNumberOfUse:
          description: Total number of times the Payment Token can be used for purchases.
          type: integer
          format: int64
          default: 2147483647
      required:
        - clientAccnum
        - clientSubacc
        - subscriptionId
        - programParticipationId
      example:
        clientAccnum: 900000
        clientSubacc: 0
        customerInfo:
          customerFname: Tyler
          customerLname: Thomas
          address1: Woodland Drive
          address2: Apt 21
          city: Tempe
          state: AZ
          zipcode: '85281'
          country: US
          phoneNumber: '5555555555'
          email: tthomas@xyz.com
          ipAddress: 10.70.60.14
          browserHttpUserAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0
          browserHttpAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
          browserHttpAcceptLanguage: en-US,en;q=0.5
          browserHttpAcceptEncoding: gzip, deflate, br
        paymentInfo:
          creditCardPaymentInfo:
            cardNum: '4473707989493598'
            nameOnCard: Tyler Thomas
            expMonth: '04'
            expYear: '2026'
        subscriptionId: 900000000000000000
        programParticipationId: 1
        timeToLive: 30
        validNumberOfUse: 3
    ValidationError:
      type: object
      properties:
        field:
          description: Field in error
          type: string
        message:
          description: User friendly message
          type: string
      required:
        - field
        - message
      example:
        field: string
        message: string
    Error:
      type: object
      properties:
        id:
          pattern: ^[a-zA-Z0-9-]*$
          description: The unique ID used to locate an error in the logs.
          type: string
          format: uuid
        errorCode:
          pattern: ^[0-9]*$
          description: Product defined error code.
          type: integer
          format: int32
        generalMessage:
          description: The general user message.
          type: string
          nullable: true
        url:
          description: The requested relative URL that has caused this error response.
          type: string
          format: uri-reference
        timestamp:
          description: The timestamp of the request that resulted in this error response.
          type: string
          format: date-time
        errors:
          description: List of validation errors, which resulted in this error response.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
  parameters:
    trait_versioned_Accept:
      name: '200'
      in: header
      description: API version
      schema:
        type: string
